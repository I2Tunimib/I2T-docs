"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[971],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5447:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:6},c="Table format",s={unversionedId:"table-representation",id:"table-representation",title:"Table format",description:"Table representation described in Typescript. You can find an example of the representation here.",source:"@site/docs/table-representation.md",sourceDirName:".",slug:"/table-representation",permalink:"/I2T-docs/table-representation",editUrl:"https://github.com/I2Tunimib/I2T-docs/docs/table-representation.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Framework Architecture",permalink:"/I2T-docs/architecture"},next:{title:"Architecture",permalink:"/I2T-docs/backend/architecture"}},u=[],p={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"table-format"},"Table format"),(0,o.kt)("p",null,"Table representation described in Typescript. You can find an example of the representation ",(0,o.kt)("a",{parentName:"p",href:"https://drive.google.com/file/d/1O9As0tNSxmGu7MKCjNo-bx0Sdrrx7vi6/view?usp=sharing"},"here"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface Table {\n  columns: Record<ID, Column>;\n  rows: Record<ID, Row>\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// a column cell entity\ninterface Column {\n  // id of a column\n  id: ID; \n  // displayed label\n  label: string;\n  // status for the column. \n  // reconciliated: all cells are reconciled with matching annotation\n  // pending: there are annotations for some of the cells, but they are not reconciled partially\n  // empty: the column cells have no annotations \n  status: 'reconciliated' | 'pending' | 'empty',\n  // annotation context for the column cells\n  // ID is the prefix of the KG (e.g.: geo, dbp, wk)\n  context: Record<ID, Context>;\n  // metadata describing the annotations for the column\n  metadata?: ColumnMetadata[];\n  // information about the annotations\n  annotationMeta?: AnnotationMeta;\n  // type of the column: 'entity', 'literal'\n  kind?: string;\n  // role of the column: 'sbj', 'obj'\n  role?: string;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// a row entity\ninterface Row {\n  // id of the row: r0, r1, r2...\n  id: ID;\n  // cells for the row\n  cells: Record<ID, Cell>\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// a row cell entity\ninterface Cell {\n  // id of the cell: r0$c0, r0$c1...\n  // the sign '$' separates the id of the row from the id of the column\n  id: ID;\n  // displayed label\n  label: string;\n  // metadata describing the annotations for the cell\n  metadata?: BaseMetadata[];\n  // information about the annotations\n  annotationMeta?: AnnotationMeta;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// column context\ninterface Context {\n  // base uri to the knowledge graph resource, e.g.: "https://www.wikidata.org/entity/"\n  uri: string;\n  // total number of annotated cells with this context\n  total: number;\n  // total number of reconciled cells for this context\n  reconciliated: number;\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// metadata\ninterface BaseMetadata {\n  // metadata id, i.e.: resource id (e.g.: "wd:Q960648")\n  id: ID;\n  // metadata name\n  name: {\n    value: string;\n    uri: string;\n  };\n  match: boolean;\n  score: number;\n  type?: BaseMetadata[];\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// metadata describing Column Metadata\ninterface ColumnMetadata {\n  type?: BaseMetadata[];\n  property?: PropertyMetadata[];\n  entity?: BaseMetadata[];\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// metadata describing columns properties\ninterface PropertyMetadata extends BaseMetadata {\n  //...BaseMetadata (inherits all data fields of BaseMetadata)\n  // object of the property\n  obj?: ID;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// annotation information\ninterface AnnotationMeta {\n  // if true the cell has been annotated\n  annotated?: boolean;\n  // describes if the cell has a matching entity annotation\n  match: {\n    value: boolean;\n    // what caused to assign the true match\n    reason?: 'reconciliator' | 'manual' | 'refinement'\n  };\n  // highest score between entity annotations\n  highestScore: number;\n  // lowest score between entity annotations\n  lowestScore: number;\n}\n")))}d.isMDXComponent=!0}}]);