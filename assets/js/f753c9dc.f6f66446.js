"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[730],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(f,l(l({ref:t},d),{},{components:n})):a.createElement(f,l({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8215:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);const o=function({children:e,hidden:t,className:n}){return a.createElement("div",{role:"tabpanel",hidden:t,className:n},e)}},6396:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(7462),o=n(7294),r=n(2389),l=n(9443);const i=function(){const e=(0,o.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=n(3810),c=n(6010);const d="tabItem_vU9c";function p(e){const{lazy:t,block:n,defaultValue:a,values:r,groupId:l,className:p}=e,u=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),m=r??u.map((({props:{value:e,label:t}})=>({value:e,label:t}))),f=(0,s.lx)(m,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===a?a:a??u.find((e=>e.props.default))?.props.value??u[0]?.props.value;if(null!==b&&!m.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${m.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:v}=i(),[g,y]=(0,o.useState)(b),k=[],{blockElementScrollPositionUntilNextRender:w}=(0,s.o5)();if(null!=l){const e=h[l];null!=e&&e!==g&&m.some((t=>t.value===e))&&y(e)}const T=e=>{const t=e.currentTarget,n=k.indexOf(t),a=m[n].value;a!==g&&(w(t),y(a),null!=l&&v(l,a))},x=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=k.indexOf(e.currentTarget)+1;t=k[n]||k[0];break}case"ArrowLeft":{const n=k.indexOf(e.currentTarget)-1;t=k[n]||k[k.length-1];break}}t?.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":n},p)},m.map((({value:e,label:t})=>o.createElement("li",{role:"tab",tabIndex:g===e?0:-1,"aria-selected":g===e,className:(0,c.Z)("tabs__item",d,{"tabs__item--active":g===e}),key:e,ref:e=>k.push(e),onKeyDown:x,onFocus:T,onClick:T},t??e)))),t?(0,o.cloneElement)(u.filter((e=>e.props.value===g))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},u.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}function u(e){const t=(0,r.Z)();return o.createElement(p,(0,a.Z)({key:String(t)},e))}},8417:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>c,toc:()=>d,default:()=>u});var a=n(7462),o=(n(7294),n(3905)),r=n(6396),l=n(8215);const i={sidebar_position:6},s="Metadata components",c={unversionedId:"frontend/metadata-components",id:"frontend/metadata-components",title:"Metadata components",description:"Similarly to how the dashboard components can be modified and added to display various kinds of information, Metadata components behave in the same way for the visualization of data fields of the metadata of a cell table.",source:"@site/docs/frontend/metadata-components.md",sourceDirName:"frontend",slug:"/frontend/metadata-components",permalink:"/I2T-docs/frontend/metadata-components",editUrl:"https://github.com/I2Tunimib/I2T-docs/docs/frontend/metadata-components.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Dashboard components",permalink:"/I2T-docs/frontend/dashboard-components"},next:{title:"Table Viewer",permalink:"/I2T-docs/frontend/table"}},d=[{value:"Example - Adding a new component",id:"example---adding-a-new-component",children:[],level:2}],p={toc:d};function u({components:e,...t}){return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"metadata-components"},"Metadata components"),(0,o.kt)("p",null,"Similarly to how the dashboard components can be modified and added to display various kinds of information, Metadata components behave in the same way for the visualization of data fields of the metadata of a cell table."),(0,o.kt)("h2",{id:"example---adding-a-new-component"},"Example - Adding a new component"),(0,o.kt)("p",null,"We are goint to add a tag component to show the boolean match data field for each candidate entity retrieved with a reconciliator."),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"backend",label:"Backend",mdxType:"TabItem"},(0,o.kt)("p",null,"Each reconciliator has its own specific configuration. In the ",(0,o.kt)("inlineCode",{parentName:"p"},"index.js")," file a ",(0,o.kt)("inlineCode",{parentName:"p"},"metaToView")," property can be specified to map a data field of a returned candidate entity object to a React component, just like the dashboard view."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/reconciliators/asiaGeonames"',title:'"services/reconciliators/asiaGeonames"'},"export default {\n  private: {\n    endpoint: process.env.ASIA_RECONCILIATION\n  },\n  public: {\n    name: 'ASIA (geonames)',\n    prefix: 'geo',\n    relativeUrl: '/asia/geonames',\n    description: 'Reconcile entities to Geonames using ASIA.',\n    uri: 'http://www.geonames.org/',\n    metaToView: {\n      id: {\n        label: 'ID',\n      },\n      name: {\n        label: 'Name',\n        type: 'link'\n      },\n      ...,\n      // let's add a new data field called 'match' of type 'tag'\n      match: {\n        label: 'Match',\n        type: 'tag'\n      }\n    }\n  }\n}\n"))),(0,o.kt)(l.Z,{value:"frontend",label:"Frontend",mdxType:"TabItem"},(0,o.kt)("p",null,"Let's build a component that renders the tag component given the ",(0,o.kt)("inlineCode",{parentName:"p"},"match")," data field. "),(0,o.kt)("p",null,"Each component receives as input:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"row: row of the dashboard containing each data field for the current object (table/dataset)"),(0,o.kt)("li",{parentName:"ul"},"props: contains a value, which is the exact value of a data field, and additional props configured in the backend collection object (see the link data field for an example).")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Tag = ({ value: inputValue }: Cell<{}>) => {\n  const value = inputValue == null ? false : inputValue;\n\n  return (\n    <Tag size=\"medium\" status={value ? 'done' : 'doing'}>\n      {`${value}`}\n    </Tag>\n  );\n};\n")),(0,o.kt)("p",null,"Add the ",(0,o.kt)("inlineCode",{parentName:"p"},"tag")," component type to the list of available component:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="pages/Viewer/TableViewer/MetadataDialog/componentsConfig.tsx"',title:'"pages/Viewer/TableViewer/MetadataDialog/componentsConfig.tsx"'},"export const CELL_COMPONENTS_TYPES = {\n  tag: Tag,\n  link: ResourceLink,\n  subList: Expander\n};\n")))),(0,o.kt)("p",null,"The result obtained will be the following:"),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("img",{src:"/I2T-docs/img/meta-component-res.png"})))}u.isMDXComponent=!0}}]);