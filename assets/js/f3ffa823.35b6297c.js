"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[544],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=a,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3172:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:5},c="External services aggregator",l={unversionedId:"backend/services-aggregator",id:"backend/services-aggregator",title:"External services aggregator",description:"Many services might be available to perform operations required for the Semantic Enrichment of a table. For ex-",source:"@site/docs/backend/services-aggregator.md",sourceDirName:"backend",slug:"/backend/services-aggregator",permalink:"/I2T-docs/backend/services-aggregator",editUrl:"https://github.com/I2Tunimib/I2T-docs/docs/backend/services-aggregator.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Dataset handler",permalink:"/I2T-docs/backend/dataset-handler"},next:{title:"Architecture",permalink:"/I2T-docs/frontend/architecture"}},p=[{value:"Query an external service",id:"query-an-external-service",children:[],level:2},{value:"Add a new service",id:"add-a-new-service",children:[{value:"index.js",id:"indexjs",children:[],level:3},{value:"requestTransformer.js",id:"requesttransformerjs",children:[],level:3},{value:"responseTransformer.js",id:"responsetransformerjs",children:[],level:3}],level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"external-services-aggregator"},"External services aggregator"),(0,i.kt)("p",null,"Many services might be available to perform operations required for the Semantic Enrichment of a table. For ex-\nample, multiple services can provide their own logic to perform a STI approach and generate annotations for a given table. Some other services might\noperate only on some of the annotation levels, i.e.: reconciliators that provide instance-level annotations for the table cells, or reconciliators that work\non the schema-level annotation of the table, mapping columns to ontology\nconcepts, determine the subject, named-entity, or literal column, or finding\nrelations between pairs of columns."),(0,i.kt)("p",null,"The service aggregator layer is built in such a way that new external services can be integrated by developers following the framework structure."),(0,i.kt)("p",null,"In the current version of SemTUI there are two types of services:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"reconciliators"),": perform the reconciliation of labels against a KG, and in general providing annotation for CEA,\nCTA and CPA (with partial annotation, or full table annotation)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"extenders"),": allow the users to extend one or more column with information from other\ndatasets enriching the original data table.")),(0,i.kt)("h2",{id:"query-an-external-service"},"Query an external service"),(0,i.kt)("p",null,"Once a client connects to the\nserver, a configuration for all the supplied services is sent to the client where\nit is parsed, displaying available services and their settings to the user. When\na request to a service is sent from the client to the server, a pipeline executes the transformation functions specified to query the service and return\nits result. An additional post processing is applied to the final response to\ncompute some statistics necessary for the application. The post processing is\nplaced on top of the transformation functions provided by the user, so that\nfurther services additions do not need to explicitly tell the system how to\ncompute those statistics."),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"/I2T-docs/img/query-service.png"})),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Two different pipeline exists for reconciliators and extenders services. They can be found in ",(0,i.kt)("inlineCode",{parentName:"p"},"./api/services/extension/extension-pipeline.js")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"./api/services/reconciliation/reconciliation-pipeline.js"),"."))),(0,i.kt)("h2",{id:"add-a-new-service"},"Add a new service"),(0,i.kt)("p",null,"Services are situated in the ",(0,i.kt)("inlineCode",{parentName:"p"},"services")," folder at the root of the application. Each service is constitued by three components:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Service structure"',title:'"Service','structure"':!0},"\ud83d\udce6serviceId\n \u2523 \ud83d\udcdcindex.js\n \u2523 \ud83d\udcdcrequestTransformer.js\n \u2517 \ud83d\udcdcresponseTransformer.js\n")),(0,i.kt)("h3",{id:"indexjs"},"index.js"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"index.js")," file contains characteristics of the service you want to add:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// be sure to export the object as default\nexport default {\n  // private properties are kept on the server\n  private: {\n    // specifies the endpoint to the external service in the environment file\n    endpoint: process.env.ASIA_RECONCILIATION\n  },\n  // public propertiest are sent to the client\n  public: {\n    // name of the service (shown in the UI)\n    name: 'ASIA (geonames)',\n    // relative URL which will be queried from the client. e.g.: /reconciliators/asia/geonames\n    relativeUrl: '/asia/geonames',\n    // a description to give the user informations about this service\n    description: 'Reconcile entities to Geonames using ASIA.',\n    // base URI of the resources returned from this service\n    uri: 'http://www.geonames.org/',\n    // how to visualize metadata information \n    // (similarly to how information for a dataset/table are mapped to client side)\n    metaToView: {\n      id: {\n        label: 'ID',\n      },\n      name: {\n        label: 'Name',\n        type: 'link'\n      },\n      score: {\n        label: 'Score'\n      },\n      type: {\n        label: 'Types',\n        type: 'subList'\n      },\n      match: {\n        label: 'Match',\n        type: 'tag'\n      }\n    }\n  }\n}\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"Type")," corresponds to a UI componenent. Check ",(0,i.kt)("a",{parentName:"p",href:"/I2T-docs/frontend/metadata-components"},"here")," how to add new UI component. If ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," is omitted the field is treated as text. The data fields included\nin the object will be displayed in the UI, meanwhile all others fields are left out of the visualization."))),(0,i.kt)("h3",{id:"requesttransformerjs"},"requestTransformer.js"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"requestTransformer.js")," file contains a transformation function which transform the client request to the format necessary to query the external service. The function returns the response from the external service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import config from './index';\nimport axios from 'axios';\n\nconst { endpoint } = config.private;\n\n// be sure to export the function as default\n// the function receivs as input the request object from the client\nexport default async (req) => {\n  const { items } = req;\n  const queries = items.reduce((acc, { id, label }) => ({\n    ...acc,\n    [id]: { query: encodeURIComponent(label || '') }\n  }), {})\n\n  const formBody = 'queries=' + JSON.stringify(queries);\n  const response = await axios.post(`${endpoint}/geonames`, formBody)\n  return response.data;\n}\n")),(0,i.kt)("h3",{id:"responsetransformerjs"},"responseTransformer.js"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"responseTransformer.js")," file contains a transformation function which transform the response of the external service to a standard format so that the frontend application always receives the same data to operate on:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import config from './index';\n\nconst { uri } = config.public;\n\n// be sure to export the function as default\n// the function receives as input the request object from the client \n// (res) and the response from the external service (res)\nexport default async (req, res) => {\n  const response = Object.keys(res).map((id) => {\n    const metadata = res[id].result.map((metaItem) => ({\n      ...metaItem,\n      name: {\n        value: metaItem.name,\n        uri: `${uri}${metaItem.id}`\n      }\n    }))\n\n    return {\n      id,\n      metadata\n    }\n  });\n  return response;\n}\n")))}m.isMDXComponent=!0}}]);