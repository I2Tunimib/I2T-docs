"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[182],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return t?a.createElement(f,l(l({ref:n},p),{},{components:t})):a.createElement(f,l({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8215:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},6396:function(e,n,t){t.d(n,{Z:function(){return d}});var a=t(7462),o=t(7294),r=t(2389),l=t(9443);var i=function(){var e=(0,o.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=t(3616),c=t(6010),p="tabItem_vU9c";function u(e){var n,t,a,r=e.lazy,l=e.block,u=e.defaultValue,d=e.values,m=e.groupId,f=e.className,b=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=d?d:b.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),h=(0,s.lx)(v,(function(e,n){return e.value===n.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===u?u:null!=(n=null!=u?u:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=b[0])?void 0:a.props.value;if(null!==g&&!v.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=i(),y=k.tabGroupChoices,w=k.setTabGroupChoices,C=(0,o.useState)(g),x=C[0],T=C[1],N=[],E=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var O=y[m];null!=O&&O!==x&&v.some((function(e){return e.value===O}))&&T(O)}var P=function(e){var n=e.currentTarget,t=N.indexOf(n),a=v[t].value;a!==x&&(E(n),T(a),null!=m&&w(m,a))},j=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=N.indexOf(e.currentTarget)+1;t=N[a]||N[0];break;case"ArrowLeft":var o=N.indexOf(e.currentTarget)-1;t=N[o]||N[N.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":l},f)},v.map((function(e){var n=e.value,t=e.label;return o.createElement("li",{role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,className:(0,c.Z)("tabs__item",p,{"tabs__item--active":x===n}),key:n,ref:function(e){return N.push(e)},onKeyDown:j,onFocus:P,onClick:P},null!=t?t:n)}))),r?(0,o.cloneElement)(b.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},b.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==x})}))))}function d(e){var n=(0,r.Z)();return o.createElement(u,(0,a.Z)({key:String(n)},e))}},6788:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return d},default:function(){return f}});var a=t(7462),o=t(3366),r=(t(7294),t(3905)),l=t(6396),i=t(8215),s=["components"],c={sidebar_position:5},p="Dashboard components",u={unversionedId:"frontend/dashboard-components",id:"frontend/dashboard-components",title:"Dashboard components",description:"The dashboard visualize in a table structure informations for datasets and tables. Each information can be customized to be displayed with a particular component mapped to type data field as explained in the backend section:",source:"@site/docs/frontend/dashboard-components.md",sourceDirName:"frontend",slug:"/frontend/dashboard-components",permalink:"/frontend/dashboard-components",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/frontend/dashboard-components.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Components tree",permalink:"/frontend/components"},next:{title:"Metadata components",permalink:"/frontend/metadata-components"}},d=[{value:"Example - Adding a new component",id:"example---adding-a-new-component",children:[],level:2}],m={toc:d};function f(e){var n=e.components,t=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dashboard-components"},"Dashboard components"),(0,r.kt)("p",null,"The dashboard visualize in a table structure informations for datasets and tables. Each information can be customized to be displayed with a particular component mapped to ",(0,r.kt)("strong",{parentName:"p"},"type")," data field as explained in the backend section:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="pages/Dashboard/cellComponentConfig.tsx"',title:'"pages/Dashboard/cellComponentConfig.tsx"'},"export const CELL_COMPONENTS_TYPES: Record<CellComponent, CellComponentProps> = {\n  link: {\n    component: (row, { value, props }) => {\n      ...\n      return <MatLink sx={{ textDecoration: 'none' }} component={Link} to={url}>{value}</MatLink>;\n    }\n  },\n  ...\n};\n")),(0,r.kt)("p",null,"The example above renders an information of dataset/table specified as ",(0,r.kt)("inlineCode",{parentName:"p"},"type: 'link'")," as a clickable url. A custom sort function ",(0,r.kt)("inlineCode",{parentName:"p"},"sortFn")," can also be specified if the value to order isn't a primitive type."),(0,r.kt)("h2",{id:"example---adding-a-new-component"},"Example - Adding a new component"),(0,r.kt)("p",null,"We are going to add a percentage component that shows a progress bar showing the percentage of annotated cells for a table."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"backend",label:"Backend",mdxType:"TabItem"},(0,r.kt)("p",null,"Add data field ",(0,r.kt)("strong",{parentName:"p"},"completion")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"COLLECTION_TABLES_MAP")," of type ",(0,r.kt)("strong",{parentName:"p"},"percentage"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="api/services/datasets.service.js"',title:'"api/services/datasets.service.js"'},"const COLLECTION_TABLES_MAP = {\n  nCols: {\n    label: 'N. Cols'\n  },\n  nRows: {\n    label: 'N. Rows'\n  },\n  // we are going to add a percentage component\n  completion: {\n    label: 'Completion',\n    type: 'percentage'\n  }\n}\n")),(0,r.kt)("p",null,"Modify the API to return the ",(0,r.kt)("inlineCode",{parentName:"p"},"completion")," data field for each table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="api/services/datasets.service.js"',title:'"api/services/datasets.service.js"'},"const DatasetsService = {\n  ...,\n  findAllTablesByDataset: async (idDataset) => {\n    const tables = await ParseService.readJsonFile({\n      path: getTablesDbPath(),\n      pattern: 'tables.*',\n      acc: [],\n      transformFn: (item) => {\n        // add completion data field\n        const { nCells, nCellsReconciliated, ...rest } = item;\n        return {\n          ...rest,\n          completion: {\n            total: nCells,\n            value: nCellsReconciliated\n          }\n        }\n      },\n      condition: (item) => item.idDataset === idDataset\n    });\n    return {\n      // return configuration of data fields\n      meta: COLLECTION_TABLES_MAP,\n      // return table entities with completion data field\n      collection: tables\n    }\n  },\n  ...\n}\n"))),(0,r.kt)(i.Z,{value:"frontend",label:"Frontend",mdxType:"TabItem"},(0,r.kt)("p",null,"Let's build a component that renders the progress bar given the ",(0,r.kt)("inlineCode",{parentName:"p"},"completion")," data field. "),(0,r.kt)("p",null,"Each component receives as input:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"row: row of the dashboard containing each data field for the current object (table/dataset)"),(0,r.kt)("li",{parentName:"ul"},"props: contains a value, which is the exact value of a data field, and additional props configured in the backend collection object (see the link data field for an example).")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'const Percentage = (row, props) => {\n  const { total, value } = props.value;\n  return (\n    <Tooltip\n      arrow\n      title={(\n        <Stack>\n          {Object.keys(props).map((key, index) => (\n            <span key={index}>\n              {`${key}: ${props[key as keyof typeof props]}`}\n            </span>\n          ))}\n        </Stack>\n      )}\n      placement="left">\n      <Stack direction="row" gap="18px">\n        <Battery value={(value / total) * 100} />\n      </Stack>\n    </Tooltip>\n  );\n}\n')),(0,r.kt)("p",null,"Add the ",(0,r.kt)("inlineCode",{parentName:"p"},"percentage")," component type to the list of available component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="pages/Dashboard/cellComponentsConfig.tsx"',title:'"pages/Dashboard/cellComponentsConfig.tsx"'},"export const CELL_COMPONENTS_TYPES: Record<CellComponent, CellComponentProps> = {\n  ...,\n  link: {\n    component: (row, { value, props }) => {\n      ...\n    }\n  },\n  percentage: {\n    component: Percentage,\n    // an additional sorting function can be specified to order the completion object\n    sortFn: (\n      rowA: any, rowB: any,\n      columnId: string,\n      desc: boolean\n    ) => {\n      const { totalA, valueA } = rowA.values[columnId];\n      const { totalB, valueB } = rowB.values[columnId];\n      return (valueA / totalA) < (totalB / valueB) ? -1 : 1;\n    }\n  },\n  ...\n};\n")))),(0,r.kt)("p",null,"The result obtained will be the following:"),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"/img/dashboard-component-res.png"})))}f.isMDXComponent=!0}}]);