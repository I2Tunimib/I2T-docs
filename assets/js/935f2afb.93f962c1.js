"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/I2T-docs/","docId":"intro"},{"type":"link","label":"Resources","href":"/I2T-docs/resources","docId":"resources"},{"type":"link","label":"How to run","href":"/I2T-docs/how-to-run","docId":"how-to-run"},{"type":"link","label":"Deploy","href":"/I2T-docs/deploy","docId":"deploy"},{"type":"link","label":"Framework Architecture","href":"/I2T-docs/architecture","docId":"architecture"},{"type":"link","label":"Exchanged Data Format","href":"/I2T-docs/table-representation","docId":"table-representation"},{"type":"category","label":"Frontend","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture","href":"/I2T-docs/frontend/architecture","docId":"frontend/architecture"},{"type":"link","label":"Store","href":"/I2T-docs/frontend/store","docId":"frontend/store"},{"type":"link","label":"Thunk middleware","href":"/I2T-docs/frontend/thunk","docId":"frontend/thunk"},{"type":"link","label":"Components tree","href":"/I2T-docs/frontend/components","docId":"frontend/components"},{"type":"link","label":"Dashboard components","href":"/I2T-docs/frontend/dashboard-components","docId":"frontend/dashboard-components"},{"type":"link","label":"Metadata components","href":"/I2T-docs/frontend/metadata-components","docId":"frontend/metadata-components"},{"type":"link","label":"Table Viewer","href":"/I2T-docs/frontend/table","docId":"frontend/table"}]},{"type":"category","label":"Backend","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture","href":"/I2T-docs/backend/architecture","docId":"backend/architecture"},{"type":"link","label":"Application configuration","href":"/I2T-docs/backend/config","docId":"backend/config"},{"type":"link","label":"Rest API","href":"/I2T-docs/backend/rest-api","docId":"backend/rest-api"},{"type":"link","label":"Dataset handler","href":"/I2T-docs/backend/dataset-handler","docId":"backend/dataset-handler"},{"type":"link","label":"External services aggregator","href":"/I2T-docs/backend/services-aggregator","docId":"backend/services-aggregator"},{"type":"category","label":"Api Specifications","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Save Table & Get Table API Data Format","href":"/I2T-docs/api/save-get-table","docId":"backend/Api Specifications/save-table-get-table-api"}]}]},{"type":"link","label":"Known bugs","href":"/I2T-docs/known-bugs","docId":"known-bugs"}]},"docs":{"architecture":{"id":"architecture","title":"Framework Architecture","description":"The tool is presented as a framework and not as a simple application. SemTUI is developed as a prototype and it is intended to provide extendable","sidebar":"tutorialSidebar"},"backend/Api Specifications/save-table-get-table-api":{"id":"backend/Api Specifications/save-table-get-table-api","title":"Save Table & Get Table API Data Format","description":"This document describes how data is passed when calling the Save Table and Get Table endpoints in the I2T-backend API. Example payloads are provided based on the files in samplejsons/gettablesample.json and samplejsons/updateTable_sample.json.","sidebar":"tutorialSidebar"},"backend/architecture":{"id":"backend/architecture","title":"Architecture","description":"Many examples of performant and scalable backend servers and","sidebar":"tutorialSidebar"},"backend/config":{"id":"backend/config","title":"Application configuration","description":"Main","sidebar":"tutorialSidebar"},"backend/dataset-handler":{"id":"backend/dataset-handler","title":"Dataset handler","description":"Tables are organized in a hierarchical","sidebar":"tutorialSidebar"},"backend/rest-api":{"id":"backend/rest-api","title":"Rest API","description":"The backend functionalities are exposed to the client through a REST","sidebar":"tutorialSidebar"},"backend/services-aggregator":{"id":"backend/services-aggregator","title":"External services aggregator","description":"Many services might be available to perform operations required for the Semantic Enrichment of a table. For example, multiple services can provide their own logic to perform a STI approach and generate annotations for a given table. Some other services might","sidebar":"tutorialSidebar"},"deploy":{"id":"deploy","title":"Deploy","description":"At the moment the frontend and server application are both served by the backend. At deploy time, the frontend application is built in static files which are then served by the backend server, while also providing SemTUI APIs.","sidebar":"tutorialSidebar"},"frontend/architecture":{"id":"frontend/architecture","title":"Architecture","description":"The second major component of the framework constits of a web application","sidebar":"tutorialSidebar"},"frontend/components":{"id":"frontend/components","title":"Components tree","description":"The majority of the logic of the entire application","sidebar":"tutorialSidebar"},"frontend/dashboard-components":{"id":"frontend/dashboard-components","title":"Dashboard components","description":"The dashboard visualizes in a table structure informations for datasets and tables. Each information can be customized to be displayed with a particular component mapped to type data field as explained in the backend section:","sidebar":"tutorialSidebar"},"frontend/metadata-components":{"id":"frontend/metadata-components","title":"Metadata components","description":"Similarly to how the dashboard components can be modified and added to display various kinds of information, Metadata components behave in the same way for the visualization of data fields of the metadata of a cell table.","sidebar":"tutorialSidebar"},"frontend/store":{"id":"frontend/store","title":"Store","description":"In the store resides data necessary to update the view","sidebar":"tutorialSidebar"},"frontend/table":{"id":"frontend/table","title":"Table Viewer","description":"The table viewer is one of the fundamental components of SemTUI, it allows","sidebar":"tutorialSidebar"},"frontend/thunk":{"id":"frontend/thunk","title":"Thunk middleware","description":"Redux doesn\u2019t allow any side effects in its reducer","sidebar":"tutorialSidebar"},"how-to-run":{"id":"how-to-run","title":"How to run","description":"To run the application locally both client and server applications have to run at the same time.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"SemTUI is a fully","sidebar":"tutorialSidebar"},"known-bugs":{"id":"known-bugs","title":"Known bugs","description":"- When a file is uploaded in the wrong format, the backend doesn\'t provide a feedback and temporary files are left on the server. Further uploades might fail. To make the server work again temporary files should be deleted from the tmp folder and the backend should be restarted.","sidebar":"tutorialSidebar"},"resources":{"id":"resources","title":"Resources","description":"- A version of the system accessible online as a web app is available here: semtui.io","sidebar":"tutorialSidebar"},"table-representation":{"id":"table-representation","title":"Exchanged Data Format","description":"In the following section are described the data formats exchanged between client and server for reconciliation and extension requests. The descriptions is presented in Typescript.","sidebar":"tutorialSidebar"}}}')}}]);