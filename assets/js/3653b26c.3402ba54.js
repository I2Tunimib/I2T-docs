"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[234],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),g=s(n),p=a,m=g["".concat(c,".").concat(p)]||g[p]||u[p]||i;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3281:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>o,metadata:()=>l,toc:()=>c,default:()=>d});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1},o="Introduction",l={unversionedId:"guide-new-category/introduction",id:"guide-new-category/introduction",title:"Introduction",description:"This section serves as a guide for future developers who may need to introduce a new",source:"@site/docs/guide-new-category/introduction.md",sourceDirName:"guide-new-category",slug:"/guide-new-category/introduction",permalink:"/I2T-docs/guide-new-category/introduction",editUrl:"https://github.com/I2Tunimib/I2T-docs/docs/guide-new-category/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Save Table & Get Table API Data Format",permalink:"/I2T-docs/api/save-get-table"},next:{title:"Backend Integration",permalink:"/I2T-docs/guide-new-category/backend"}},c=[{value:"Definition of Service Category",id:"definition-of-service-category",children:[],level:2},{value:"Backend Integration",id:"backend-integration",children:[],level:2},{value:"Frontend Integration",id:"frontend-integration",children:[],level:2},{value:"Example: Modifiers as new Category Service",id:"example-modifiers-as-new-category-service",children:[],level:2}],s={toc:c};function d({components:e,...t}){return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"This section serves as a guide for future developers who may need to introduce a new\nService Category. It indicates the required steps to integrate the new category both in\nthe ",(0,a.kt)("strong",{parentName:"p"},"backend")," (core logic, API, configuration) and in the ",(0,a.kt)("strong",{parentName:"p"},"frontend")," (UI representation and interaction)."),(0,a.kt)("h2",{id:"definition-of-service-category"},"Definition of Service Category"),(0,a.kt)("p",null,"In the I2T framework, a Service Category defines a functional class of modules that\ncan interact with the system through a standardized interface.\nEach category groups services that share a similar purpose and follow a common\ninput/output structure, allowing the framework to manage them uniformly through the\n",(0,a.kt)("strong",{parentName:"p"},"External Service Aggregator"),"."),(0,a.kt)("p",null,"Existing categories include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Reconcilers")," \u2013 Services responsible for aligning or enriching metadata by matching\nentities with external sources (e.g., linking local data to external knowledge bases)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Extenders")," \u2013 Services that add complementary data or attributes to existing resources,\nby fetching related information from external systems."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Modifiers")," \u2013 Services that process and transform data, such as formatting, normalization,\nanonymization or restructuring operations applied to a column.")),(0,a.kt)("h2",{id:"backend-integration"},"Backend Integration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Backend folders and files to update and add"',title:'"Backend',folders:!0,and:!0,files:!0,to:!0,update:!0,'add"':!0},"\ud83d\udce6src\n \u2523 \ud83d\udcc2api\n \u2503 \u2523 \ud83d\udcc2controllers\n \u2503 \u2503 \u2523 \ud83d\udcdcconfig.controller.js\n \u2503 \u2503 \u2517 \ud83d\udcdcnewCategoryService.controller.js\n \u2503 \u2523 \ud83d\udcc2routes\n \u2503 \u2503 \u2523 \ud83d\udcdcindex.js\n \u2503 \u2503 \u2517 \ud83d\udcdcnewCategoryService.route.js\n \u2503 \u2523 \ud83d\udcc2middleware\n \u2503 \u2503 \u2517 \ud83d\udcdclogger.js\n \u2503 \u2517 \ud83d\udcc2services\n \u2503   \u2523 \ud83d\udcc2logger\n \u2503   \u2503 \u2517 \ud83d\udcdclogger.service.js\n \u2503   \u2517 \ud83d\udcc2newCategoryService\n \u2503     \u2523 \ud83d\udcdcnewCategoryService-pipeline.js\n \u2503     \u2517 \ud83d\udcdcutils.js\n \u2523 \ud83d\udcc2config\n \u2503 \u2517 \ud83d\udcdcindex.js\n \u2517 \ud83d\udcc2services\n   \u2517 \ud83d\udcc2newCategoryService \n")),(0,a.kt)("h2",{id:"frontend-integration"},"Frontend Integration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Frontend folders and files to update and add"',title:'"Frontend',folders:!0,and:!0,files:!0,to:!0,update:!0,'add"':!0},"\ud83d\udce6src\n \u2523 \ud83d\udcc2components\n \u2503 \u2517 \ud83d\udcc2core\n \u2503   \u2517 \ud83d\udcc2DynamicForm\n \u2503     \u2517 \ud83d\udcdcDynamicForm.tsx\n \u2523 \ud83d\udcc2pages\n \u2503 \u2517 \ud83d\udcc2Viewer\n \u2503   \u2517 \ud83d\udcc2TableViewer\n \u2503     \u2523 \ud83d\udcc2Menus\n \u2503     \u2503 \u2517 \ud83d\udcc2ContextMenus\n \u2503     \u2503   \u2517 \ud83d\udcdcContextMenuColumn.tsx\n \u2503     \u2523 \ud83d\udcc2NewCategoryServiceDialog\n \u2503     \u2523 \u2517 \ud83d\udcdcNewCategoryServiceDialog.tsx\n \u2503     \u2517 \ud83d\udcc2SubToolbar\n \u2503       \u2517 \ud83d\udcdcSubToolbar.tsx\n \u2523 \ud83d\udcc2services\n \u2503 \u2517 \ud83d\udcc2api\n \u2503   \u2517 \ud83d\udcdctable.ts\n \u2517 \ud83d\udcc2store\n   \u2517 \ud83d\udcc2slices\n     \u2523 \ud83d\udcc2config\n     \u2503 \u2523 \ud83d\udcc2interfaces\n     \u2503 \u2503 \u2517 \ud83d\udcc2config.ts\n     \u2503 \u2523 \ud83d\udcdcconfig.selectors.ts\n     \u2503 \u2517 \ud83d\udcdcconfig.slice.ts\n     \u2517 \ud83d\udcc2table\n       \u2523 \ud83d\udcc2interfaces\n       \u2503 \u2517 \ud83d\udcc2table.ts\n       \u2523 \ud83d\udcdctable.selectors.ts\n       \u2523 \ud83d\udcdctable.thunk.ts\n       \u2517 \ud83d\udcdctable.slice.ts\n")),(0,a.kt)("p",null,"Here\u2019s the table with coherent generic naming for a new service category:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Concept"),(0,a.kt)("th",{parentName:"tr",align:null},"Existing Specific Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Generic Name for New Category"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"AsyncThunk / action"),(0,a.kt)("td",{parentName:"tr",align:null},"modify"),(0,a.kt)("td",{parentName:"tr",align:null},"newCategoryService")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Single service instance"),(0,a.kt)("td",{parentName:"tr",align:null},"modifier"),(0,a.kt)("td",{parentName:"tr",align:null},"newCategory")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Collection of services"),(0,a.kt)("td",{parentName:"tr",align:null},"modifiers"),(0,a.kt)("td",{parentName:"tr",align:null},"newCategories")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Operation / execution"),(0,a.kt)("td",{parentName:"tr",align:null},"modification"),(0,a.kt)("td",{parentName:"tr",align:null},"newServiceOperation")))),(0,a.kt)("h2",{id:"example-modifiers-as-new-category-service"},"Example: Modifiers as new Category Service"),(0,a.kt)("p",null,"Here\u2019s how the new Category Service appears in the frontend:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"New Category Service Example",src:n(7590).Z})),(0,a.kt)("p",null,"The form dynamically renders all fields provided by the service and can be used directly by end users."))}d.isMDXComponent=!0},7590:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/new-category-service-e0e1daf7fb0acebae994add7b3bc5a8f.gif"}}]);